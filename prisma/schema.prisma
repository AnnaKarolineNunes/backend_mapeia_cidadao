datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Enum para definir os tipos de usuário possíveis
enum TipoUsuario {
  user
  admin
}

model Usuario {
  id              Int        @id @default(autoincrement())
  nome            String
  email           String     @unique
  senha           String
  tipoUsuario     TipoUsuario
  relatos         Relato[]   @relation("UsuarioRelatos")
  chats           Chat[]
}

model Relato {
  id              Int        @id @default(autoincrement())
  dataCriacao     DateTime   @default(now())
  localizacao     String
  categoria       String
  status          String
  descricao       String?
  usuario         Usuario    @relation("UsuarioRelatos", fields: [usuarioId], references: [id])
  usuarioId       Int
  autoridade      Autoridade @relation("AutoridadeRelatos", fields: [autoridadeId], references: [id])
  autoridadeId    Int
  acompanhamentos Acompanhamento[]
  mapaCalor       MapaCalor?
  inteligencia    InteligenciaArtificialRelato[]
  questionario    Questionario?
}

model Acompanhamento {
  id              Int        @id @default(autoincrement())
  dataAtualizacao DateTime   @default(now())
  statusAtual     String
  descricaoProgresso String
  relato          Relato     @relation(fields: [relatoId], references: [id])
  relatoId        Int
}

model Autoridade {
  id              Int        @id @default(autoincrement())
  nome            String
  orgao           String
  emailContato    String     @unique
  relatos         Relato[]   @relation("AutoridadeRelatos")
}

model Chat {
  id              Int        @id @default(autoincrement())
  mensagem        String
  dataHora        DateTime   @default(now())
  usuario         Usuario    @relation(fields: [usuarioId], references: [id])
  usuarioId       Int
}

model MapaCalor {
  id              Int        @id @default(autoincrement())
  coordenadasProblemas Json
  dataAtualizacao DateTime   @default(now())
  relato          Relato     @relation(fields: [relatoId], references: [id])
  relatoId        Int        @unique
}

model Questionario {
  id              Int    @id @default(autoincrement())
  perguntas       Json
  opcoesResposta  Json
  relato          Relato @relation(fields: [relatoId], references: [id])
  relatoId        Int    @unique // Relação um-para-um
}

model InteligenciaArtificial {
  id              Int        @id @default(autoincrement())
  algoritmo       String
  parametros      Json
  relatos         InteligenciaArtificialRelato[]
}

model InteligenciaArtificialRelato {
  id              Int                    @id @default(autoincrement())
  inteligenciaId  Int
  relatoId        Int
  inteligencia    InteligenciaArtificial @relation(fields: [inteligenciaId], references: [id])
  relato          Relato                 @relation(fields: [relatoId], references: [id])
  @@unique([inteligenciaId, relatoId])
}
